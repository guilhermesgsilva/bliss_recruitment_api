{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Questions.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { NavLink } from \"react-router-dom\";\nimport Search from \"./Search\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Main = styled.main`\n    {\n        min-height: 90vh;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        text-align: center;\n        font-size: 1.05em;\n    }\n\n    .green-card {\n        min-width: 30vw;\n        min-height: 60vh;\n        border: 1px solid #AAD576;\n        padding: 5vh;\n        margin-top: 5vh;\n        border-radius: 10px;\n\n    }\n\n    h2 {\n        color: #538D22;\n        font-family: \"Roboto Slab\";\n        font-size: 2em;\n    }\n\n    ul {\n        list-style-type: none;\n        padding-left: 0;\n        line-height: 1.75em;\n    }\n    \n    a{\n        color: #538D22;\n    }\n\n    a:hover{\n        color: #AAD576;\n    }\n\n    .spinner-border {\n        margin-top: 10vh;\n        color: #AAD576;\n    }\n\n`;\n_c = Main;\n\nfunction Questions() {\n  _s();\n\n  const [health, setHealth] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [offset, setOffset] = useState(10);\n  const [filter, setFilter] = useState(null);\n  useEffect(() => {\n    async function getHealth() {\n      const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/health`);\n      setHealth(response.data);\n    }\n\n    getHealth();\n\n    async function getAllQuestions() {\n      const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/questions?limit=${limit}&offset=${offset}&filter=${filter}`);\n      setQuestions(response.data);\n    }\n\n    getAllQuestions();\n  }, []);\n\n  const handleRefresh = async () => {\n    const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/health`);\n    setHealth(response.data);\n  };\n\n  const handleSearch = search => {\n    setFilter(search);\n    console.log(\"searchOnChange: \" + search);\n    console.log(\"filterOnChange: \" + filter); // Delay of 1 change!!!\n  };\n\n  return /*#__PURE__*/_jsxDEV(Main, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"green-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Find Your Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        setSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), health.status ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: health.status === \"OK\" ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: questions.map(element => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                to: `/questions/${element.id}`,\n                children: element.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 45\n              }, this)\n            }, element.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRefresh(),\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Questions, \"rZbTgLg/P8LvkKpQQwRUV8BjCGE=\");\n\n_c2 = Questions;\n;\nexport default Questions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"Questions\");","map":{"version":3,"sources":["/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Questions.js"],"names":["useState","useEffect","axios","NavLink","Search","Spinner","styled","Main","main","Questions","health","setHealth","questions","setQuestions","limit","setLimit","offset","setOffset","filter","setFilter","getHealth","response","get","data","getAllQuestions","handleRefresh","handleSearch","search","console","log","status","map","element","id","question"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { NavLink } from \"react-router-dom\";\n\nimport Search from \"./Search\";\n\nimport Spinner from 'react-bootstrap/Spinner'\n\nimport styled from \"styled-components\";\n\nconst Main = styled.main`\n    {\n        min-height: 90vh;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        text-align: center;\n        font-size: 1.05em;\n    }\n\n    .green-card {\n        min-width: 30vw;\n        min-height: 60vh;\n        border: 1px solid #AAD576;\n        padding: 5vh;\n        margin-top: 5vh;\n        border-radius: 10px;\n\n    }\n\n    h2 {\n        color: #538D22;\n        font-family: \"Roboto Slab\";\n        font-size: 2em;\n    }\n\n    ul {\n        list-style-type: none;\n        padding-left: 0;\n        line-height: 1.75em;\n    }\n    \n    a{\n        color: #538D22;\n    }\n\n    a:hover{\n        color: #AAD576;\n    }\n\n    .spinner-border {\n        margin-top: 10vh;\n        color: #AAD576;\n    }\n\n`;\n\nfunction Questions( ) {\n    const [health, setHealth] = useState([]);\n    const [questions, setQuestions] = useState([]);\n    const [limit, setLimit] = useState(10);\n    const [offset, setOffset] = useState(10);\n    const [filter, setFilter] = useState(null);\n\n    useEffect(() => {\n        async function getHealth() {\n          const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/health`);\n          setHealth(response.data);\n        }\n        getHealth();\n\n        async function getAllQuestions() {\n            const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/questions?limit=${limit}&offset=${offset}&filter=${filter}`);\n            setQuestions(response.data);\n          }\n          getAllQuestions();\n    }, []);\n\n    const handleRefresh = async () => {\n        const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/health`);\n        setHealth(response.data);\n    }\n\n    const handleSearch = (search) => {\n        setFilter(search)\n        console.log(\"searchOnChange: \" + search)\n        console.log(\"filterOnChange: \" + filter) // Delay of 1 change!!!\n    }\n\n    return (\n        <Main>\n            <div className=\"green-card\">\n                <h2>Find Your Question</h2>\n                <Search setSearch={handleSearch} />\n                {health.status ? (\n                    <>\n                        {health.status === \"OK\" ? (\n                            <ul>\n                                {questions.map((element) => {\n                                    return (\n                                        <li key={element.id}>\n                                            <NavLink to={`/questions/${element.id}`}>{element.question}</NavLink>\n                                        </li>\n                                    );\n                                })}\n                            </ul>\n                        ) : (\n                            <button onClick={() => handleRefresh()}>Refresh</button>\n                        )}\n                    </>\n                ) : (\n                        <Spinner animation=\"border\" />\n                )}\n            </div>\n        </Main>\n    );\n};\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}