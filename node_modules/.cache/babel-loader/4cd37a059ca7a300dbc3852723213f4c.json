{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Questions.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { NavLink } from \"react-router-dom\";\nimport Search from \"./Search\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Main = styled.main`\n    {\n        min-height: 90vh;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        text-align: center;\n        width: 30vw;\n    }\n\n    ul {\n        list-style-type: none;\n        padding-left: 0;\n    }\n    \n    a{\n        text-decoration: none;\n        color: #1A4301;\n    }\n\n    a:hover{\n        text-decoration: none;\n        color: #AAD576;\n    }\n\n`;\n_c = Main;\n\nfunction Questions() {\n  _s();\n\n  const [health, setHealth] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [offset, setOffset] = useState(10);\n  const [filter, setFilter] = useState(null);\n  useEffect(() => {\n    async function getHealth() {\n      const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/health`);\n      setHealth(response.data);\n    }\n\n    getHealth();\n\n    async function getAllQuestions() {\n      const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/questions?limit=${limit}&offset=${offset}&filter=${filter}`);\n      setQuestions(response.data);\n    }\n\n    getAllQuestions();\n  }, []);\n\n  const handleRefresh = async () => {\n    const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/health`);\n    setHealth(response.data);\n  };\n\n  const handleSearch = search => {\n    setFilter(search);\n    console.log(\"searchOnChange: \" + search);\n    console.log(\"filterOnChange: \" + filter); // Delay of 1 change!!!\n  };\n\n  return /*#__PURE__*/_jsxDEV(Main, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Find Your Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      setSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), health.status ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: health.status === \"OK\" ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questions.map(element => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: `/questions/${element.id}`,\n              children: element.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 41\n            }, this)\n          }, element.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 37\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRefresh(),\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Questions, \"rZbTgLg/P8LvkKpQQwRUV8BjCGE=\");\n\n_c2 = Questions;\n;\nexport default Questions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"Questions\");","map":{"version":3,"sources":["/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Questions.js"],"names":["useState","useEffect","axios","NavLink","Search","styled","Main","main","Questions","health","setHealth","questions","setQuestions","limit","setLimit","offset","setOffset","filter","setFilter","getHealth","response","get","data","getAllQuestions","handleRefresh","handleSearch","search","console","log","status","map","element","id","question"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { NavLink } from \"react-router-dom\";\n\nimport Search from \"./Search\";\n\nimport styled from \"styled-components\";\n\nconst Main = styled.main`\n    {\n        min-height: 90vh;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        text-align: center;\n        width: 30vw;\n    }\n\n    ul {\n        list-style-type: none;\n        padding-left: 0;\n    }\n    \n    a{\n        text-decoration: none;\n        color: #1A4301;\n    }\n\n    a:hover{\n        text-decoration: none;\n        color: #AAD576;\n    }\n\n`;\n\nfunction Questions( ) {\n    const [health, setHealth] = useState([]);\n    const [questions, setQuestions] = useState([]);\n    const [limit, setLimit] = useState(10);\n    const [offset, setOffset] = useState(10);\n    const [filter, setFilter] = useState(null);\n\n    useEffect(() => {\n        async function getHealth() {\n          const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/health`);\n          setHealth(response.data);\n        }\n        getHealth();\n\n        async function getAllQuestions() {\n            const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/questions?limit=${limit}&offset=${offset}&filter=${filter}`);\n            setQuestions(response.data);\n          }\n          getAllQuestions();\n    }, []);\n\n    const handleRefresh = async () => {\n        const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/health`);\n        setHealth(response.data);\n    }\n\n    const handleSearch = (search) => {\n        setFilter(search)\n        console.log(\"searchOnChange: \" + search)\n        console.log(\"filterOnChange: \" + filter) // Delay of 1 change!!!\n    }\n\n    return (\n        <Main>\n            <h2>Find Your Question</h2>\n            <Search setSearch={handleSearch} />\n            {health.status ? (\n                <>\n                    {health.status === \"OK\" ? (\n                        <ul>\n                            {questions.map((element) => {\n                                return (\n                                    <li key={element.id}>\n                                        <NavLink to={`/questions/${element.id}`}>{element.question}</NavLink>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    ) : (\n                        <button onClick={() => handleRefresh()}>Refresh</button>\n                    )}\n                </>\n            ) : (\n                <p>Loading</p>\n            )}\n        </Main>\n    );\n};\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}