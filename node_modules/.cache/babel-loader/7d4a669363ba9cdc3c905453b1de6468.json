{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Detail.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Questions from \"./Questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Styles = styled.div`\n    {\n        \n    }\n`;\n_c = Styles;\n\nfunction Detail(_ref) {\n  _s();\n\n  let {\n    useParams\n  } = _ref;\n  const [question, setQuestion] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function getQuestion() {\n      const response = await axios.get(`https://private-64010-blissrecruitmentapi.apiary-mock.com/questions/${useParams}`);\n      setQuestion(response.data);\n    }\n\n    getQuestion();\n  }, []);\n\n  const handleVote = async () => {\n    const response = await axios.put(`https://private-anon-cf3ea3a63b-blissrecruitmentapi.apiary-mock.com/questions/${useParams}`);\n    setQuestion(response.data);\n    navigate(`/questions/${question.id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Styles, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Detail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), question.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Question: \", question.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Id: \", question.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Published at: \", question.published_at]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: question.image_url,\n        alt: question.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: question.thumb_url,\n        alt: question.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: question.choices.map((element, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: element.choice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Votes: \", element.votes]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleVote(index),\n              children: \"Vote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: `/share/${element.id}`,\n        children: element.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Detail, \"GXbVPtit+QgqdFex85PYSyhkpjI=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = Detail;\n;\nexport default Detail;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Styles\");\n$RefreshReg$(_c2, \"Detail\");","map":{"version":3,"sources":["/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Detail.js"],"names":["useState","useEffect","axios","useNavigate","NavLink","styled","Questions","Styles","div","Detail","useParams","question","setQuestion","navigate","getQuestion","response","get","data","handleVote","put","id","published_at","image_url","thumb_url","choices","map","element","index","choice","votes"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,kBAArC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,MAAM,GAAGF,MAAM,CAACG,GAAI;AAC1B;AACA;AACA;AACA,CAJA;KAAMD,M;;AAMN,SAASE,MAAT,OAA6B;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMa,QAAQ,GAAGV,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAea,WAAf,GAA6B;AAC3B,YAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,uEAAsEN,SAAU,EAA3F,CAAvB;AACAE,MAAAA,WAAW,CAACG,QAAQ,CAACE,IAAV,CAAX;AACD;;AACDH,IAAAA,WAAW;AACZ,GANM,EAMJ,EANI,CAAT;;AAQE,QAAMI,UAAU,GAAG,YAAY;AAC7B,UAAMH,QAAQ,GAAG,MAAMb,KAAK,CAACiB,GAAN,CACpB,iFAAgFT,SAAU,EADtE,CAAvB;AAGAE,IAAAA,WAAW,CAACG,QAAQ,CAACE,IAAV,CAAX;AACAJ,IAAAA,QAAQ,CAAE,cAAaF,QAAQ,CAACS,EAAG,EAA3B,CAAR;AACD,GAND;;AAQF,sBACI,QAAC,MAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKT,QAAQ,CAACS,EAAT,gBACG;AAAA,8BACI;AAAA,iCAAeT,QAAQ,CAACA,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,2BAAQA,QAAQ,CAACS,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,qCAAkBT,QAAQ,CAACU,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAK,QAAA,GAAG,EAAEV,QAAQ,CAACW,SAAnB;AAA8B,QAAA,GAAG,EAAEX,QAAQ,CAACS;AAA5C;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAK,QAAA,GAAG,EAAET,QAAQ,CAACY,SAAnB;AAA8B,QAAA,GAAG,EAAEZ,QAAQ,CAACS;AAA5C;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,kBACKT,QAAQ,CAACa,OAAT,CAAiBC,GAAjB,CAAqB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACtC,8BACI;AAAA,oCACI;AAAA,wBAAKD,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,oCAAWF,OAAO,CAACG,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAQ,cAAA,OAAO,EAAE,MAAMX,UAAU,CAACS,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA,aAASA,KAAT;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH,SARA;AADL;AAAA;AAAA;AAAA;AAAA,cANJ,eAiBI,QAAC,OAAD;AAAS,QAAA,EAAE,EAAG,UAASD,OAAO,CAACN,EAAG,EAAlC;AAAA,kBAAsCM,OAAO,CAACf;AAA9C;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA,oBADH,gBAqBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH;;GAhDQF,M;UAEYN,W;;;MAFZM,M;AAgDR;AAED,eAAeA,MAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, NavLink } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\nimport Questions from \"./Questions\";\n\nconst Styles = styled.div`\n    {\n        \n    }\n`;\n\nfunction Detail({useParams}) {\n    const [question, setQuestion] = useState({});\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        async function getQuestion() {\n          const response = await axios.get(`https://private-64010-blissrecruitmentapi.apiary-mock.com/questions/${useParams}`);\n          setQuestion(response.data);\n        }\n        getQuestion();\n      }, []);\n\n      const handleVote = async () => {\n        const response = await axios.put(\n          `https://private-anon-cf3ea3a63b-blissrecruitmentapi.apiary-mock.com/questions/${useParams}`,\n        );\n        setQuestion(response.data);\n        navigate(`/questions/${question.id}`);\n      };\n\n    return (\n        <Styles>\n            <h2>Detail</h2>\n            {question.id ? (\n                <>\n                    <h3>Question: {question.question}</h3>\n                    <p>Id: {question.id}</p>\n                    <p>Published at: {question.published_at}</p>\n                    <img src={question.image_url} alt={question.id} />\n                    <img src={question.thumb_url} alt={question.id} />\n                    <ul>\n                        {question.choices.map((element, index) => {\n                            return (\n                                <li key={index}>\n                                    <h4>{element.choice}</h4> \n                                    <p>Votes: {element.votes}</p>\n                                    <button onClick={() => handleVote(index)}>Vote</button>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                    <NavLink to={`/share/${element.id}`}>{element.question}</NavLink>\n                </>\n            ) : (\n                <p>Loading</p>\n            ) }\n        </Styles>\n    );\n};\n\nexport default Detail;"]},"metadata":{},"sourceType":"module"}