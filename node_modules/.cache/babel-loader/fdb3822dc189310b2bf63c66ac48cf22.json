{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Styles = styled.div`\n    {\n       background-color: green;\n       height: 100vh; \n    }\n`;\n\nfunction Search(props) {\n  _s();\n\n  let [searchParams, setSearchParams] = useSearchParams();\n  let search = searchParams.get(\"filter\") || \"\";\n  const [focused, setFocused] = useState(false);\n\n  const onFocus = () => setFocused(true);\n\n  const handleChange = e => {\n    const filter = e.target.value;\n\n    if (filter) {\n      props.setSearch(filter);\n      setSearchParams({\n        filter\n      });\n    } else {\n      setSearchParams({});\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // doesen't work\n    // search = \"\" // can't use an useState/setSearch !!!\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: search,\n        onFocus: onFocus,\n        onChange: handleChange,\n        placeholder: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Search, \"R7DBD1DpXqHbczNM8wVe1ALEYFU=\", false, function () {\n  return [useSearchParams];\n});\n\n_c = Search;\n;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Search.js"],"names":["useState","useEffect","useSearchParams","styled","Styles","div","Search","props","searchParams","setSearchParams","search","get","focused","setFocused","onFocus","handleChange","e","filter","target","value","setSearch","handleSubmit","preventDefault"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,eAAT,QAAgC,kBAAhC;AAGA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,MAAM,GAAGD,MAAM,CAACE,GAAI;AAC1B;AACA;AACA;AACA;AACA,CALA;;AAOA,SAASC,MAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,MAAI,CAACC,YAAD,EAAeC,eAAf,IAAkCP,eAAe,EAArD;AAEA,MAAIQ,MAAM,GAAGF,YAAY,CAACG,GAAb,CAAiB,QAAjB,KAA8B,EAA3C;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAMc,OAAO,GAAG,MAAMD,UAAU,CAAC,IAAD,CAAhC;;AAEA,QAAME,YAAY,GAAIC,CAAD,IAAO;AACxB,UAAMC,MAAM,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAxB;;AAEA,QAAIF,MAAJ,EAAY;AACRV,MAAAA,KAAK,CAACa,SAAN,CAAgBH,MAAhB;AACAR,MAAAA,eAAe,CAAC;AAAEQ,QAAAA;AAAF,OAAD,CAAf;AACH,KAHD,MAGO;AACHR,MAAAA,eAAe,CAAC,EAAD,CAAf;AACH;AACJ,GATD;;AAWA,QAAMY,YAAY,GAAIL,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACM,cAAF,GADwB,CACJ;AACpB;AACH,GAHD;;AAKA,sBACI;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAED,YAAhB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEX,MAA1B;AAAkC,QAAA,OAAO,EAAEI,OAA3C;AAAoD,QAAA,QAAQ,EAAEC,YAA9D;AAA4E,QAAA,WAAW,EAAC;AAAxF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AASH;;GAjCQT,M;UACiCJ,e;;;KADjCI,M;AAiCR;AAED,eAAeA,MAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams } from \"react-router-dom\";\n\n\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n    {\n       background-color: green;\n       height: 100vh; \n    }\n`;\n\nfunction Search (props) {\n    let [searchParams, setSearchParams] = useSearchParams();\n\n    let search = searchParams.get(\"filter\") || \"\";\n\n    const [focused, setFocused] = useState(false)\n    const onFocus = () => setFocused(true)\n\n    const handleChange = (e) => {\n        const filter = e.target.value;\n\n        if (filter) {\n            props.setSearch(filter)\n            setSearchParams({ filter });\n        } else {\n            setSearchParams({});\n        }\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault(); // doesen't work\n        // search = \"\" // can't use an useState/setSearch !!!\n    }\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" value={search} onFocus={onFocus} onChange={handleChange} placeholder=\"Search\"/>\n                <button type=\"submit\">Reset</button>\n            </form>\n            \n        </>\n    )\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}