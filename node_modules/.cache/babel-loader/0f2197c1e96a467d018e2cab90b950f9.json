{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Questions.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { NavLink } from \"react-router-dom\";\nimport Loading from \"./components/Loading\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Styles = styled.div`\n    {\n       background-color: green;\n       height: 100vh; \n    }\n`;\n_c = Styles;\n\nfunction Questions() {\n  _s();\n\n  const [health, setHealth] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    async function getHealth() {\n      const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/health`);\n      setHealth(response.data);\n    }\n\n    getHealth();\n  }, []);\n  useEffect(() => {\n    async function getAllQuestions() {\n      const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/questions?limit=5&offset=5&filter=choice`);\n      setQuestions(response.data);\n    }\n\n    getAllQuestions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Styles, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), health.status === \"O\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: health.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: questions.map(element => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            to: `/questions/${element.id}`,\n            children: element.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)\n        }, element.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Questions, \"hqOEPTCoNuDy69jeIgVgYnV6yms=\");\n\n_c2 = Questions;\n;\nexport default Questions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Styles\");\n$RefreshReg$(_c2, \"Questions\");","map":{"version":3,"sources":["/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Questions.js"],"names":["useState","useEffect","axios","NavLink","Loading","styled","Styles","div","Questions","health","setHealth","questions","setQuestions","getHealth","response","get","data","getAllQuestions","status","map","element","id","question"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,MAAM,GAAGD,MAAM,CAACE,GAAI;AAC1B;AACA;AACA;AACA;AACA,CALA;KAAMD,M;;AAON,SAASE,SAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeY,SAAf,GAA2B;AACzB,YAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAW,4EAAX,CAAvB;AACAL,MAAAA,SAAS,CAACI,QAAQ,CAACE,IAAV,CAAT;AACD;;AACDH,IAAAA,SAAS;AACZ,GANQ,EAMN,EANM,CAAT;AAQAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAegB,eAAf,GAAiC;AAC/B,YAAMH,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAW,8GAAX,CAAvB;AACAH,MAAAA,YAAY,CAACE,QAAQ,CAACE,IAAV,CAAZ;AACD;;AACDC,IAAAA,eAAe;AAClB,GANQ,EAMN,EANM,CAAT;AAQA,sBACI,QAAC,MAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKR,MAAM,CAACS,MAAP,KAAkB,GAAlB,gBACG;AAAA,gBAAIT,MAAM,CAACS;AAAX;AAAA;AAAA;AAAA;AAAA,YADH,gBAGG;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALR,eAOI;AAAA,gBACKP,SAAS,CAACQ,GAAV,CAAeC,OAAD,IAAa;AACxB,4BACI;AAAA,iCACI,QAAC,OAAD;AAAS,YAAA,EAAE,EAAG,cAAaA,OAAO,CAACC,EAAG,EAAtC;AAAA,sBAA0CD,OAAO,CAACE;AAAlD;AAAA;AAAA;AAAA;AAAA;AADJ,WAASF,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OANA;AADL;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAvCQb,S;;MAAAA,S;AAuCR;AAED,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { NavLink } from \"react-router-dom\";\n\nimport Loading from \"./components/Loading\";\n\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n    {\n       background-color: green;\n       height: 100vh; \n    }\n`;\n\nfunction Questions( ) {\n    const [health, setHealth] = useState([]);\n    const [questions, setQuestions] = useState([]);\n\n    useEffect(() => {\n        async function getHealth() {\n          const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/health`);\n          setHealth(response.data);\n        }\n        getHealth();\n    }, []);\n\n    useEffect(() => {\n        async function getAllQuestions() {\n          const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/questions?limit=5&offset=5&filter=choice`);\n          setQuestions(response.data);\n        }\n        getAllQuestions();\n    }, []);\n\n    return (\n        <Styles>\n            <h2>Questions</h2>\n            {health.status === \"O\" ? (\n                <p>{health.status}</p>\n            ) : (\n                <p className=\"loading\">Loading...</p>\n            )}\n            <ul>\n                {questions.map((element) => {\n                    return (\n                        <li key={element.id}>\n                            <NavLink to={`/questions/${element.id}`}>{element.question}</NavLink>\n                        </li>\n                    );\n                })}\n            </ul>\n        </Styles>\n    );\n};\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}