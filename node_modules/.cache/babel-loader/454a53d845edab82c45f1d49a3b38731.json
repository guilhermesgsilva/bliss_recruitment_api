{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Detail.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Questions from \"./Questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Styles = styled.div`\n    {\n        \n    }\n`;\n_c = Styles;\n\nfunction Detail(_ref) {\n  _s();\n\n  let {\n    useParams\n  } = _ref;\n  const [question, setQuestion] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function getQuestion() {\n      const response = await axios.get(`https://private-64010-blissrecruitmentapi.apiary-mock.com/questions/${useParams}`);\n      setQuestion(response.data);\n    }\n\n    getQuestion();\n  }, []); //   const handleVote = async () => {\n  //     const response = await axios.put(\n  //       `https://private-anon-cf3ea3a63b-blissrecruitmentapi.apiary-mock.com/questions/${useParams}`,\n  //     );\n  //     setQuestion(response.data);\n  //     navigate(`/questions/${question.id}`);\n  //   };\n\n  const handleVote = index => {\n    question.choices[index].votes++;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Styles, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Detail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), question.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Question: \", question.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Id: \", question.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Published at: \", question.published_at]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: question.image_url,\n        alt: question.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: question.thumb_url,\n        alt: question.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: question.choices.map((element, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: element.choice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Votes: \", element.votes]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleVote(index),\n              children: \"Vote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Detail, \"GXbVPtit+QgqdFex85PYSyhkpjI=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = Detail;\n;\nexport default Detail;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Styles\");\n$RefreshReg$(_c2, \"Detail\");","map":{"version":3,"sources":["/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Detail.js"],"names":["useState","useEffect","axios","useNavigate","styled","Questions","Styles","div","Detail","useParams","question","setQuestion","navigate","getQuestion","response","get","data","handleVote","index","choices","votes","id","published_at","image_url","thumb_url","map","element","choice"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,MAAM,GAAGF,MAAM,CAACG,GAAI;AAC1B;AACA;AACA;AACA,CAJA;KAAMD,M;;AAMN,SAASE,MAAT,OAA6B;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMY,QAAQ,GAAGT,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeY,WAAf,GAA6B;AAC3B,YAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAW,uEAAsEN,SAAU,EAA3F,CAAvB;AACAE,MAAAA,WAAW,CAACG,QAAQ,CAACE,IAAV,CAAX;AACD;;AACDH,IAAAA,WAAW;AACZ,GANM,EAMJ,EANI,CAAT,CAJyB,CAYzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMI,UAAU,GAAIC,KAAD,IAAW;AAC1BR,IAAAA,QAAQ,CAACS,OAAT,CAAiBD,KAAjB,EAAwBE,KAAxB;AACH,GAFD;;AAIA,sBACI,QAAC,MAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKV,QAAQ,CAACW,EAAT,gBACG;AAAA,8BACI;AAAA,iCAAeX,QAAQ,CAACA,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,2BAAQA,QAAQ,CAACW,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,qCAAkBX,QAAQ,CAACY,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAK,QAAA,GAAG,EAAEZ,QAAQ,CAACa,SAAnB;AAA8B,QAAA,GAAG,EAAEb,QAAQ,CAACW;AAA5C;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAK,QAAA,GAAG,EAAEX,QAAQ,CAACc,SAAnB;AAA8B,QAAA,GAAG,EAAEd,QAAQ,CAACW;AAA5C;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,kBACKX,QAAQ,CAACS,OAAT,CAAiBM,GAAjB,CAAqB,CAACC,OAAD,EAAUR,KAAV,KAAoB;AACtC,8BACI;AAAA,oCACI;AAAA,wBAAKQ,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,oCAAWD,OAAO,CAACN,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAQ,cAAA,OAAO,EAAE,MAAMH,UAAU,CAACC,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA,aAASA,KAAT;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH,SARA;AADL;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA,oBADH,gBAoBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GAnDQV,M;UAEYL,W;;;MAFZK,M;AAmDR;AAED,eAAeA,MAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\nimport Questions from \"./Questions\";\n\nconst Styles = styled.div`\n    {\n        \n    }\n`;\n\nfunction Detail({useParams}) {\n    const [question, setQuestion] = useState({});\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        async function getQuestion() {\n          const response = await axios.get(`https://private-64010-blissrecruitmentapi.apiary-mock.com/questions/${useParams}`);\n          setQuestion(response.data);\n        }\n        getQuestion();\n      }, []);\n\n    //   const handleVote = async () => {\n    //     const response = await axios.put(\n    //       `https://private-anon-cf3ea3a63b-blissrecruitmentapi.apiary-mock.com/questions/${useParams}`,\n    //     );\n    //     setQuestion(response.data);\n    //     navigate(`/questions/${question.id}`);\n    //   };\n\n    const handleVote = (index) => {\n        question.choices[index].votes ++;\n    };\n\n    return (\n        <Styles>\n            <h2>Detail</h2>\n            {question.id ? (\n                <>\n                    <h3>Question: {question.question}</h3>\n                    <p>Id: {question.id}</p>\n                    <p>Published at: {question.published_at}</p>\n                    <img src={question.image_url} alt={question.id} />\n                    <img src={question.thumb_url} alt={question.id} />\n                    <ul>\n                        {question.choices.map((element, index) => {\n                            return (\n                                <li key={index}>\n                                    <h4>{element.choice}</h4> \n                                    <p>Votes: {element.votes}</p>\n                                    <button onClick={() => handleVote(index)}>Vote</button>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </>\n            ) : (\n                <p>Loading</p>\n            ) }\n        </Styles>\n    );\n};\n\nexport default Detail;"]},"metadata":{},"sourceType":"module"}