{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useSearchParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Styles = styled.div`\n    {\n       background-color: green;\n       height: 100vh; \n    }\n`;\n\nfunction Search(props) {\n  _s();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  let search = searchParams.get(\"filter\") || \"\";\n\n  const handleSearchInput = e => {\n    const filter = e.target.value;\n\n    if (filter) {\n      props.setSearch(filter);\n      setSearchParams({\n        filter\n      });\n    } else {\n      setSearchParams({});\n    }\n  };\n\n  const handleReset = e => {// e.preventDefault();\n    // search = \"\"\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: search,\n        onChange: handleSearchInput,\n        placeholder: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleReset(),\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Search, \"/eCs5CB4FLGAVLeprHBYLwBGf/Q=\", false, function () {\n  return [useSearchParams];\n});\n\n_c = Search;\n;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Search.js"],"names":["useState","useSearchParams","styled","Styles","div","Search","props","searchParams","setSearchParams","search","get","handleSearchInput","e","filter","target","value","setSearch","handleReset"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AAGA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,MAAM,GAAGD,MAAM,CAACE,GAAI;AAC1B;AACA;AACA;AACA;AACA,CALA;;AAOA,SAASC,MAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,eAAe,EAAvD;AAEA,MAAIQ,MAAM,GAAGF,YAAY,CAACG,GAAb,CAAiB,QAAjB,KAA8B,EAA3C;;AAEA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC7B,UAAMC,MAAM,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAxB;;AAEA,QAAIF,MAAJ,EAAY;AACRP,MAAAA,KAAK,CAACU,SAAN,CAAgBH,MAAhB;AACAL,MAAAA,eAAe,CAAC;AAAEK,QAAAA;AAAF,OAAD,CAAf;AACH,KAHD,MAGO;AACHL,MAAAA,eAAe,CAAC,EAAD,CAAf;AACH;AACJ,GATD;;AAWA,QAAMS,WAAW,GAAIL,CAAD,IAAO,CACvB;AACA;AACH,GAHD;;AAKA,sBACI;AAAA,2BACI;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEH,MAA1B;AAAkC,QAAA,QAAQ,EAAEE,iBAA5C;AAA+D,QAAA,WAAW,EAAC;AAA3E;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,MAAMM,WAAW,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AASH;;GA9BQZ,M;UACmCJ,e;;;KADnCI,M;AA8BR;AAED,eAAeA,MAAf","sourcesContent":["import { useState } from 'react';\nimport { useSearchParams } from \"react-router-dom\";\n\n\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n    {\n       background-color: green;\n       height: 100vh; \n    }\n`;\n\nfunction Search (props) {\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    let search = searchParams.get(\"filter\") || \"\";\n\n    const handleSearchInput = (e) => {\n        const filter = e.target.value;\n\n        if (filter) {\n            props.setSearch(filter)\n            setSearchParams({ filter });\n        } else {\n            setSearchParams({});\n        }\n    };\n\n    const handleReset = (e) => {\n        // e.preventDefault();\n        // search = \"\"\n    }\n\n    return (\n        <>\n            <form >\n                <input type=\"text\" value={search} onChange={handleSearchInput} placeholder=\"Search\"/>\n                <button onClick={() => handleReset()}>Reset</button>\n            </form>\n            \n        </>\n    )\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}