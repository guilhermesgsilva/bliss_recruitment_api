{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Styles = styled.div`\n    {\n       background-color: blue;\n       height: 100vh; \n    }\n`;\n_c = Styles;\n\nfunction Questions() {\n  _s();\n\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    async function getAllQuestions() {\n      const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/questions?limit=5&offset=5&filter=`);\n      setQuestions(response.data);\n    }\n\n    getAllQuestions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Styles, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: questions.map(element => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            to: `/questions/${element._id}`,\n            children: element.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this)\n        }, element._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Questions, \"1ery3Y2F+nTWSbC27k3nmjCRtvo=\");\n\n_c2 = Questions;\n;\nexport default Questions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Styles\");\n$RefreshReg$(_c2, \"Questions\");","map":{"version":3,"sources":["/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Home.js"],"names":["styled","Styles","div","Questions","questions","setQuestions","useState","useEffect","getAllQuestions","response","axios","get","data","map","element","_id","question"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,MAAM,GAAGD,MAAM,CAACE,GAAI;AAC1B;AACA;AACA;AACA;AACA,CALA;KAAMD,M;;AAON,SAASE,SAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeC,eAAf,GAAiC;AAC/B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAW,wGAAX,CAAvB;AACAN,MAAAA,YAAY,CAACI,QAAQ,CAACG,IAAV,CAAZ;AACD;;AACDJ,IAAAA,eAAe;AAClB,GANQ,EAMN,EANM,CAAT;AAQA,sBACI,QAAC,MAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBACKJ,SAAS,CAACS,GAAV,CAAeC,OAAD,IAAa;AACxB,4BACI;AAAA,iCACI,QAAC,OAAD;AAAS,YAAA,EAAE,EAAG,cAAaA,OAAO,CAACC,GAAI,EAAvC;AAAA,sBAA2CD,OAAO,CAACE;AAAnD;AAAA;AAAA;AAAA;AAAA;AADJ,WAASF,OAAO,CAACC,GAAjB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OANA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAzBQZ,S;;MAAAA,S;AAyBR;AAED,eAAeA,SAAf","sourcesContent":["import styled from \"styled-components\";\n\nconst Styles = styled.div`\n    {\n       background-color: blue;\n       height: 100vh; \n    }\n`;\n\nfunction Questions( ) {\n    const [questions, setQuestions] = useState([]);\n\n    useEffect(() => {\n        async function getAllQuestions() {\n          const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/questions?limit=5&offset=5&filter=`);\n          setQuestions(response.data);\n        }\n        getAllQuestions();\n    }, []);\n\n    return (\n        <Styles>\n            <h2>Questions</h2>\n            <ul>\n                {questions.map((element) => {\n                    return (\n                        <li key={element._id}>\n                            <NavLink to={`/questions/${element._id}`}>{element.question}</NavLink>\n                        </li>\n                    );\n                })}\n            </ul>\n        </Styles>\n    );\n};\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}