{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Detail.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Share from \"./Share\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Main = styled.main`\n    {\n        min-height: 90vh;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        text-align: center;\n        font-size: 1.05em;\n        color: #538D22;\n    }\n\n    .green-card {\n        min-width: 30vw;\n        min-height: 60vh;\n        ${''\n/* border: 1px solid #AAD576; */\n}\n        padding: 5vh;\n        margin: 5vh 0;\n        border-radius: 10px;\n        background-color: #FEF9EE;\n    }\n\n    h2{\n        font-family: \"Roboto Slab\";\n        font-size: 2em;\n        margin: 3.5vh 0;\n    }\n\n    form {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n        align-items: center;\n    }\n\n    input {\n        margin: 0 1em;\n        border: 1px solid #AAD576;\n        color: #538D22;\n        border-radius: 5px;\n    }\n\n    input:focus {\n        outline: none !important;\n        border:1px solid #538D22;\n    }\n    \n    button {\n        padding: 0.1em 0.5em;\n        border-radius: 5px;\n        margin: 0.5em 0;\n        background-color: #AAD576;\n        color: #FFFFFF;\n        border: 1px solid #AAD576;\n    }\n\n    button:hover {\n        background-color: #FFFFFF;\n        color: #538D22;\n    }\n\n    ul {\n        list-style-type: none;\n        padding-left: 0;\n        margin: 2.5em 0;\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: space-around;\n    }\n\n    li{\n        margin: 1em;\n        width: 7.5em;\n        border: 1px solid #AAD576;\n        border-radius: 5px;\n        background-color: #FFFFFF;\n    }\n\n    h5 {\n        font-weight: bolder;\n        background-color: #AAD576;\n        padding: 0.5em;\n    }\n\n    p {\n        margin: 0;\n    }\n\n    img {        \n        width: 100%;\n        height: auto;\n    }\n\n    #publishDate {\n        color: #AAD576;\n        text-align: right;\n    }\n\n    .spinner-border {\n        margin-top: 20vh;\n        color: #AAD576;\n    }\n`;\n_c = Main;\n\nfunction Detail() {\n  _s();\n\n  const [question, setQuestion] = useState({});\n  useEffect(() => {\n    async function getQuestion() {\n      const response = await axios.get(`https://private-64010-blissrecruitmentapi.apiary-mock.com/questions/${question.id}`);\n      setQuestion(response.data);\n    }\n\n    getQuestion();\n  }, []);\n\n  const handleVote = async () => {\n    const response = await axios.put(`https://private-anon-cf3ea3a63b-blissrecruitmentapi.apiary-mock.com/questions/${question.id}`);\n    setQuestion(response.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Main, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"green-card\",\n      children: question.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: question.image_url,\n          alt: question.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"publishDate\",\n          children: [\"Published at: \", question.published_at.slice(0, 10)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: question.choices.map((element, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [element.choice, \"ajgabdfpibjadfipbafibanfbnadfb\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Votes: \", element.votes]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleVote(index),\n                children: \"Vote\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Share, {\n          url: window.location.href\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Detail, \"J49LyOLMMf99nqMe8kplVWwnD5s=\");\n\n_c2 = Detail;\n;\nexport default Detail;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"Detail\");","map":{"version":3,"sources":["/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Detail.js"],"names":["useState","useEffect","axios","Share","Spinner","styled","Main","main","Detail","question","setQuestion","getQuestion","response","get","id","data","handleVote","put","image_url","published_at","slice","choices","map","element","index","choice","votes","window","location","href"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,IAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AAAG;AAAiC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArGA;KAAMD,I;;AAuGN,SAASE,MAAT,GAAkB;AAAA;;AACd,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeU,WAAf,GAA6B;AAC3B,YAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,uEAAsEJ,QAAQ,CAACK,EAAG,EAA7F,CAAvB;AACAJ,MAAAA,WAAW,CAACE,QAAQ,CAACG,IAAV,CAAX;AACD;;AACDJ,IAAAA,WAAW;AACZ,GANM,EAMJ,EANI,CAAT;;AAQA,QAAMK,UAAU,GAAG,YAAY;AAC3B,UAAMJ,QAAQ,GAAG,MAAMV,KAAK,CAACe,GAAN,CAClB,iFAAgFR,QAAQ,CAACK,EAAG,EAD1E,CAAvB;AAGAJ,IAAAA,WAAW,CAACE,QAAQ,CAACG,IAAV,CAAX;AACH,GALD;;AAOA,sBACI,QAAC,IAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACKN,QAAQ,CAACK,EAAT,gBACG;AAAA,gCACA;AAAK,UAAA,GAAG,EAAEL,QAAQ,CAACS,SAAnB;AAA8B,UAAA,GAAG,EAAET,QAAQ,CAACK;AAA5C;AAAA;AAAA;AAAA;AAAA,gBADA,eAEI;AAAG,UAAA,EAAE,EAAC,aAAN;AAAA,uCAAmCL,QAAQ,CAACU,YAAT,CAAsBC,KAAtB,CAA4B,CAA5B,EAA8B,EAA9B,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAKX,QAAQ,CAACA;AAAd;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,oBACKA,QAAQ,CAACY,OAAT,CAAiBC,GAAjB,CAAqB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACtC,gCACI;AAAA,sCACI;AAAA,2BAAKD,OAAO,CAACE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,sCAAWF,OAAO,CAACG,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAQ,gBAAA,OAAO,EAAE,MAAMV,UAAU,CAACQ,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA,eAASA,KAAT;AAAA;AAAA;AAAA;AAAA,oBADJ;AAOH,WARA;AADL;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAeI,QAAC,KAAD;AAAO,UAAA,GAAG,EAAEG,MAAM,CAACC,QAAP,CAAgBC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA,sBADH,gBAmBG,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AApBR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GA7CQrB,M;;MAAAA,M;AA6CR;AAED,eAAeA,MAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport Share from \"./Share\";\n\nimport Spinner from 'react-bootstrap/Spinner'\n\nimport styled from \"styled-components\";\n\nconst Main = styled.main`\n    {\n        min-height: 90vh;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        text-align: center;\n        font-size: 1.05em;\n        color: #538D22;\n    }\n\n    .green-card {\n        min-width: 30vw;\n        min-height: 60vh;\n        ${'' /* border: 1px solid #AAD576; */}\n        padding: 5vh;\n        margin: 5vh 0;\n        border-radius: 10px;\n        background-color: #FEF9EE;\n    }\n\n    h2{\n        font-family: \"Roboto Slab\";\n        font-size: 2em;\n        margin: 3.5vh 0;\n    }\n\n    form {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n        align-items: center;\n    }\n\n    input {\n        margin: 0 1em;\n        border: 1px solid #AAD576;\n        color: #538D22;\n        border-radius: 5px;\n    }\n\n    input:focus {\n        outline: none !important;\n        border:1px solid #538D22;\n    }\n    \n    button {\n        padding: 0.1em 0.5em;\n        border-radius: 5px;\n        margin: 0.5em 0;\n        background-color: #AAD576;\n        color: #FFFFFF;\n        border: 1px solid #AAD576;\n    }\n\n    button:hover {\n        background-color: #FFFFFF;\n        color: #538D22;\n    }\n\n    ul {\n        list-style-type: none;\n        padding-left: 0;\n        margin: 2.5em 0;\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: space-around;\n    }\n\n    li{\n        margin: 1em;\n        width: 7.5em;\n        border: 1px solid #AAD576;\n        border-radius: 5px;\n        background-color: #FFFFFF;\n    }\n\n    h5 {\n        font-weight: bolder;\n        background-color: #AAD576;\n        padding: 0.5em;\n    }\n\n    p {\n        margin: 0;\n    }\n\n    img {        \n        width: 100%;\n        height: auto;\n    }\n\n    #publishDate {\n        color: #AAD576;\n        text-align: right;\n    }\n\n    .spinner-border {\n        margin-top: 20vh;\n        color: #AAD576;\n    }\n`;\n\nfunction Detail() {\n    const [question, setQuestion] = useState({});\n\n    useEffect(() => {\n        async function getQuestion() {\n          const response = await axios.get(`https://private-64010-blissrecruitmentapi.apiary-mock.com/questions/${question.id}`);\n          setQuestion(response.data);\n        }\n        getQuestion();\n      }, []);\n\n    const handleVote = async () => {\n        const response = await axios.put(\n            `https://private-anon-cf3ea3a63b-blissrecruitmentapi.apiary-mock.com/questions/${question.id}`,\n        );\n        setQuestion(response.data);\n    };\n\n    return (\n        <Main>\n            <div className=\"green-card\">\n                {question.id ? (\n                    <>\n                    <img src={question.image_url} alt={question.id} />\n                        <p id=\"publishDate\">Published at: {question.published_at.slice(0,10)}</p>\n                        <h2>{question.question}</h2>\n                        <ul>\n                            {question.choices.map((element, index) => {\n                                return (\n                                    <li key={index}>\n                                        <h5>{element.choice}ajgabdfpibjadfipbafibanfbnadfb</h5> \n                                        <p>Votes: {element.votes}</p>\n                                        <button onClick={() => handleVote(index)}>Vote</button>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                        <Share url={window.location.href} />\n                    </>\n                ) : (\n                    <Spinner animation=\"border\" />\n                ) }\n            </div>\n        </Main>\n    );\n};\n\nexport default Detail;"]},"metadata":{},"sourceType":"module"}