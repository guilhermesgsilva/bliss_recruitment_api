{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Questions.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Styles = styled.div`\n    {\n        \n    }\n`;\n_c = Styles;\n\nfunction Questions() {\n  _s();\n\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    async function getAllQuestions() {\n      const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/questions?limit=5&offset=5&filter=`);\n      setQuestions(response.data);\n    }\n\n    getAllQuestions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Styles, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredUsers.map(user => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            to: `/users/${user._id}`,\n            children: user.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Questions, \"1ery3Y2F+nTWSbC27k3nmjCRtvo=\");\n\n_c2 = Questions;\n;\nexport default Questions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Styles\");\n$RefreshReg$(_c2, \"Questions\");","map":{"version":3,"sources":["/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Questions.js"],"names":["useState","useEffect","axios","NavLink","styled","Styles","div","Questions","questions","setQuestions","getAllQuestions","response","get","data","filteredUsers","map","user","_id","userName"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,MAAM,GAAGD,MAAM,CAACE,GAAI;AAC1B;AACA;AACA;AACA,CAJA;KAAMD,M;;AAMN,SAASE,SAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeS,eAAf,GAAiC;AAC/B,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,wGAAX,CAAvB;AACAH,MAAAA,YAAY,CAACE,QAAQ,CAACE,IAAV,CAAZ;AACD;;AACDH,IAAAA,eAAe;AAClB,GANQ,EAMN,EANM,CAAT;AAQA,sBACI,QAAC,MAAD;AAAA,2BACA;AAAA,gBACKI,aAAa,CAACC,GAAd,CAAmBC,IAAD,IAAU;AACzB,4BACI;AAAA,iCACI,QAAC,OAAD;AAAS,YAAA,EAAE,EAAG,UAASA,IAAI,CAACC,GAAI,EAAhC;AAAA,sBAAoCD,IAAI,CAACE;AAAzC;AAAA;AAAA;AAAA;AAAA;AADJ,WAASF,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OANA;AADL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAxBQV,S;;MAAAA,S;AAwBR;AAED,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { NavLink } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n    {\n        \n    }\n`;\n\nfunction Questions( ) {\n    const [questions, setQuestions] = useState([]);\n\n    useEffect(() => {\n        async function getAllQuestions() {\n          const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/questions?limit=5&offset=5&filter=`);\n          setQuestions(response.data);\n        }\n        getAllQuestions();\n    }, []);\n\n    return (\n        <Styles>\n        <ul>\n            {filteredUsers.map((user) => {\n                return (\n                    <li key={user._id}>\n                        <NavLink to={`/users/${user._id}`}>{user.userName}</NavLink>\n                    </li>\n                );\n            })}\n        </ul>\n        </Styles>\n    );\n};\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}