[{"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/index.js":"1","/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/App.js":"2","/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/reportWebVitals.js":"3","/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Questions.js":"4","/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Detail.js":"5","/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/NavBar.js":"6","/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Home.js":"7","/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Search.js":"8","/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Share.js":"9"},{"size":592,"mtime":1644080476613,"results":"10","hashOfConfig":"11"},{"size":744,"mtime":1644495726160,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1642545280679,"results":"13","hashOfConfig":"11"},{"size":2424,"mtime":1644447342840,"results":"14","hashOfConfig":"11"},{"size":1919,"mtime":1644096849366,"results":"15","hashOfConfig":"11"},{"size":322,"mtime":1644492054221,"results":"16","hashOfConfig":"11"},{"size":437,"mtime":1644493737052,"results":"17","hashOfConfig":"11"},{"size":1310,"mtime":1644449062633,"results":"18","hashOfConfig":"11"},{"size":955,"mtime":1644449168084,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"13irs7n",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/index.js",[],["44","45"],"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/App.js",[],"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/reportWebVitals.js",[],"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Questions.js",["46","47","48"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { NavLink } from \"react-router-dom\";\n\nimport Search from \"./Search\";\n\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n    {\n       background-color: green;\n       height: 100vh; \n    }\n`;\n\nfunction Questions( ) {\n    const [health, setHealth] = useState([]);\n    const [questions, setQuestions] = useState([]);\n    const [limit, setLimit] = useState(10);\n    const [offset, setOffset] = useState(10);\n    const [filter, setFilter] = useState(null);\n\n    useEffect(() => {\n        async function getHealth() {\n          const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/health`);\n          setHealth(response.data);\n        }\n        getHealth();\n\n        async function getAllQuestions() {\n            const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/questions?limit=${limit}&offset=${offset}&filter=${filter}`);\n            setQuestions(response.data);\n          }\n          getAllQuestions();\n    }, []);\n\n    const handleRefresh = async () => {\n        const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/health`);\n        setHealth(response.data);\n    }\n\n    const handleSearch = (search) => {\n        setFilter(search)\n        console.log(\"searchOnChange: \" + search)\n        console.log(\"filterOnChange: \" + filter) // Delay of 1 change!!!\n    }\n\n    return (\n        <Styles>\n            <h2>Find a Question</h2>\n            <Search setSearch={handleSearch} />\n\n            {health.status ? (\n                <>\n                    {health.status === \"OK\" ? (\n                        <ul>\n                            {questions.map((element) => {\n                                return (\n                                    <li key={element.id}>\n                                        <NavLink to={`/questions/${element.id}`}>{element.question}</NavLink>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    ) : (\n                        <button onClick={() => handleRefresh()}>Refresh</button>\n                    )}\n                </>\n            ) : (\n                <p>Loading</p>\n            )}\n        </Styles>\n    );\n};\n\nexport default Questions;",["49","50"],"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Detail.js",["51"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport Share from \"./Share\";\n\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n    {\n        \n    }\n`;\n\nfunction Detail() {\n    const [question, setQuestion] = useState({});\n\n    useEffect(() => {\n        async function getQuestion() {\n          const response = await axios.get(`https://private-64010-blissrecruitmentapi.apiary-mock.com/questions/${question.id}`);\n          setQuestion(response.data);\n        }\n        getQuestion();\n      }, []);\n\n    const handleVote = async () => {\n        const response = await axios.put(\n            `https://private-anon-cf3ea3a63b-blissrecruitmentapi.apiary-mock.com/questions/${question.id}`,\n        );\n        setQuestion(response.data);\n    };\n\n    return (\n        <Styles>\n            <h2>Detail</h2>\n            {question.id ? (\n                <>\n                    <h3>Question: {question.question}</h3>\n                    <p>Id: {question.id}</p>\n                    <p>Published at: {question.published_at}</p>\n                    <img src={question.image_url} alt={question.id} />\n                    <img src={question.thumb_url} alt={question.id} />\n                    <ul>\n                        {question.choices.map((element, index) => {\n                            return (\n                                <li key={index}>\n                                    <h4>{element.choice}</h4> \n                                    <p>Votes: {element.votes}</p>\n                                    <button onClick={() => handleVote(index)}>Vote</button>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                    <Share url={window.location.href} />\n                </>\n            ) : (\n                <p>Loading</p>\n            ) }\n        </Styles>\n    );\n};\n\nexport default Detail;","/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/NavBar.js",[],["52","53"],"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Home.js",[],"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Search.js",["54","55","56"],"import { useState, useEffect } from 'react';\nimport { useSearchParams, NavLink } from \"react-router-dom\";\n\nimport Share from \"./Share\";\n\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n    {\n       background-color: green;\n       height: 100vh; \n    }\n`;\n\nfunction Search (props) {\n    const [searchParams, setSearchParams] = useSearchParams();\n    \n\n    let search = searchParams.get(\"filter\") || \"\";\n    \n\n    const [focused, setFocused] = useState(false)\n    const onFocus = () => {\n        setFocused(true)\n    }\n\n    const handleChange = (e) => {\n        const filter = e.target.value;\n\n        if (filter) {\n            setFocused(true)\n            props.setSearch(filter)\n            setSearchParams({ filter });\n            \n        } else {\n            setSearchParams({});\n        }\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setSearchParams(\"\")\n        setFocused(false)\n    }\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" value={search} onFocus={onFocus} onChange={handleChange} placeholder=\"Search\"/>\n                <button type=\"submit\">Dismiss</button>\n            </form>\n            {focused && (<Share url={window.location.href} />)}\n        </>\n    )\n};\n\nexport default Search;\n","/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Share.js",["57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":19,"column":19,"nodeType":"65","messageId":"66","endLine":19,"endColumn":27},{"ruleId":"63","severity":1,"message":"67","line":20,"column":20,"nodeType":"65","messageId":"66","endLine":20,"endColumn":29},{"ruleId":"68","severity":1,"message":"69","line":35,"column":8,"nodeType":"70","endLine":35,"endColumn":10,"suggestions":"71"},{"ruleId":"59","replacedBy":"72"},{"ruleId":"61","replacedBy":"73"},{"ruleId":"68","severity":1,"message":"74","line":23,"column":10,"nodeType":"70","endLine":23,"endColumn":12,"suggestions":"75"},{"ruleId":"59","replacedBy":"76"},{"ruleId":"61","replacedBy":"77"},{"ruleId":"63","severity":1,"message":"78","line":1,"column":20,"nodeType":"65","messageId":"66","endLine":1,"endColumn":29},{"ruleId":"63","severity":1,"message":"79","line":2,"column":27,"nodeType":"65","messageId":"66","endLine":2,"endColumn":34},{"ruleId":"63","severity":1,"message":"80","line":8,"column":7,"nodeType":"65","messageId":"66","endLine":8,"endColumn":13},{"ruleId":"63","severity":1,"message":"78","line":1,"column":20,"nodeType":"65","messageId":"66","endLine":1,"endColumn":29},{"ruleId":"63","severity":1,"message":"81","line":3,"column":10,"nodeType":"65","messageId":"66","endLine":3,"endColumn":21},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'setLimit' is assigned a value but never used.","Identifier","unusedVar","'setOffset' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filter', 'limit', and 'offset'. Either include them or remove the dependency array.","ArrayExpression",["84"],["82"],["83"],"React Hook useEffect has a missing dependency: 'question.id'. Either include it or remove the dependency array.",["85"],["82"],["83"],"'useEffect' is defined but never used.","'NavLink' is defined but never used.","'Styles' is assigned a value but never used.","'useNavigate' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [filter, limit, offset]",{"range":"90","text":"91"},"Update the dependencies array to be: [question.id]",{"range":"92","text":"93"},[1106,1108],"[filter, limit, offset]",[538,540],"[question.id]"]