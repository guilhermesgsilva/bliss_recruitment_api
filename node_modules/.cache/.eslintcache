[{"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/index.js":"1","/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/App.js":"2","/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/reportWebVitals.js":"3","/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Questions.js":"4","/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Detail.js":"5","/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/NavBar.js":"6","/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Home.js":"7","/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Search.js":"8","/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Share.js":"9"},{"size":592,"mtime":1644080476613,"results":"10","hashOfConfig":"11"},{"size":668,"mtime":1644616910914,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1642545280679,"results":"13","hashOfConfig":"11"},{"size":3627,"mtime":1644617477356,"results":"14","hashOfConfig":"11"},{"size":3929,"mtime":1644617134296,"results":"15","hashOfConfig":"11"},{"size":834,"mtime":1644616917744,"results":"16","hashOfConfig":"11"},{"size":1568,"mtime":1644616997415,"results":"17","hashOfConfig":"11"},{"size":2096,"mtime":1644616770259,"results":"18","hashOfConfig":"11"},{"size":821,"mtime":1644534702683,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"13irs7n",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/index.js",[],["44","45"],"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/App.js",[],["46","47"],"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/reportWebVitals.js",[],["48","49"],"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Questions.js",["50","51","52"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { NavLink } from \"react-router-dom\";\n\nimport Search from \"./Search\";\n\nimport Spinner from 'react-bootstrap/Spinner'\n\nimport styled from \"styled-components\";\n\nconst Main = styled.main`\n    {\n        min-height: 90vh;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        text-align: center;\n        font-size: 1.05em;\n        color: #538D22;\n    }\n\n    .orange-card {\n        min-width: 30vw;\n        min-height: 60vh;\n        ${'' /* border: 1px solid #AAD576; */}\n        padding: 5vh;\n        margin-top: 5vh;\n        border-radius: 10px;\n        background-color: #FEF9EE;\n    }\n\n    h2 {\n        font-family: \"Roboto Slab\";\n        font-size: 2em;\n    }\n\n    ul {\n        list-style-type: none;\n        padding-left: 0;\n        line-height: 1.75em;\n    }\n    \n    a{\n        color: #538D22;\n    }\n\n    a:hover{\n        color: #AAD576;\n    }\n\n    .spinner-border {\n        margin-top: 10vh;\n        color: #AAD576;\n    }\n\n    button {\n        padding: 0.1em 0.5em;\n        border-radius: 5px;\n        margin: 0.5em 0;\n        background-color: #AAD576;\n        color: #FFFFFF;\n        border: 1px solid #AAD576;\n    }\n\n    button:hover {\n        background-color: #FFFFFF;\n        color: #538D22;\n    }\n\n`;\n\nfunction Questions( ) {\n    const [health, setHealth] = useState([]);\n    const [questions, setQuestions] = useState([]);\n    const [limit, setLimit] = useState(10);\n    const [offset, setOffset] = useState(10);\n    const [filter, setFilter] = useState(null);\n\n    useEffect(() => {\n        async function getHealth() {\n          const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/health`);\n          setHealth(response.data);\n        }\n        getHealth();\n\n        async function getAllQuestions() {\n            const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/questions?limit=${limit}&offset=${offset}&filter=${filter}`);\n            setQuestions(response.data);\n          }\n          getAllQuestions();\n    }, []);\n\n    const handleRefresh = async () => {\n        const response = await axios.get(`https://private-anon-e7b3f01cb5-blissrecruitmentapi.apiary-mock.com/health`);\n        setHealth(response.data);\n    }\n\n    const handleSearch = (search) => {\n        setFilter(search)\n        console.log(\"searchOnChange: \" + search)\n        console.log(\"filterOnChange: \" + filter) // Delay of 1 change!!!\n    }\n\n    return (\n        <Main>\n            <div className=\"orange-card\">\n                <h2>Find Your Question</h2>\n                <Search setSearch={handleSearch} />\n                {health.status ? (\n                    <>\n                        {health.status === \"OK\" ? (\n                            <ul>\n                                {questions.map((element) => {\n                                    return (\n                                        <li key={element.id}>\n                                            <NavLink to={`/questions/${element.id}`}>{element.question}</NavLink>\n                                        </li>\n                                    );\n                                })}\n                            </ul>\n                        ) : (\n                            <button onClick={() => handleRefresh()}>Refresh</button>\n                        )}\n                    </>\n                ) : (\n                        <Spinner animation=\"border\" />\n                )}\n            </div>\n        </Main>\n    );\n};\n\nexport default Questions;","/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Detail.js",["53"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport Share from \"./Share\";\n\nimport Spinner from 'react-bootstrap/Spinner'\n\nimport styled from \"styled-components\";\n\nconst Main = styled.main`\n    {\n        min-height: 90vh;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        text-align: center;\n        font-size: 1.05em;\n        color: #538D22;\n    }\n\n    .orange-card {\n        min-width: 30vw;\n        min-height: 60vh;\n        ${'' /* border: 1px solid #AAD576; */}\n        padding: 5vh;\n        margin: 5vh 0;\n        border-radius: 10px;\n        background-color: #FEF9EE;\n    }\n\n    h2{\n        font-family: \"Roboto Slab\";\n        font-size: 2em;\n        margin: 3.5vh 0;\n    }\n\n    form {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n        align-items: center;\n    }\n\n    input {\n        margin: 0 1em;\n        border: 1px solid #AAD576;\n        color: #538D22;\n        border-radius: 5px;\n        padding-left: 0.5em;\n    }\n\n    input::placeholder {\n        color: #AAD576;\n    }\n\n    input:focus {\n        outline: none !important;\n        border:1px solid #538D22;\n    }\n    \n    button {\n        padding: 0.1em 0.5em;\n        border-radius: 5px;\n        margin: 0.5em 0;\n        background-color: #AAD576;\n        color: #FFFFFF;\n        border: 1px solid #AAD576;\n    }\n\n    button:hover {\n        background-color: #FFFFFF;\n        color: #538D22;\n    }\n\n    ul {\n        list-style-type: none;\n        padding-left: 0;\n        margin: 2.5em 0;\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: space-around;\n    }\n\n    li{\n        margin: 1em;\n        width: 7.5em;\n        border: 1px solid #AAD576;\n        border-radius: 5px;\n        background-color: #FFFFFF;\n    }\n\n    h5 {\n        font-weight: bolder;\n        background-color: #AAD576;\n        padding: 0.5em;\n    }\n\n    p {\n        margin: 0;\n    }\n\n    img {        \n        width: 100%;\n        height: auto;\n    }\n\n    #publishDate {\n        color: #AAD576;\n        text-align: right;\n    }\n\n    .spinner-border {\n        margin-top: 20vh;\n        color: #AAD576;\n    }\n`;\n\nfunction Detail() {\n    const [question, setQuestion] = useState({});\n\n    useEffect(() => {\n        async function getQuestion() {\n          const response = await axios.get(`https://private-64010-blissrecruitmentapi.apiary-mock.com/questions/${question.id}`);\n          setQuestion(response.data);\n        }\n        getQuestion();\n      }, []);\n\n    const handleVote = async () => {\n        const response = await axios.put(\n            `https://private-anon-cf3ea3a63b-blissrecruitmentapi.apiary-mock.com/questions/${question.id}`,\n        );\n        setQuestion(response.data);\n    };\n\n    return (\n        <Main>\n            <div className=\"orange-card\">\n                {question.id ? (\n                    <>\n                    <img src={question.image_url} alt={question.id} />\n                        <p id=\"publishDate\">Published at: {question.published_at.slice(0,10)}</p>\n                        <h2>{question.question}</h2>\n                        <ul>\n                            {question.choices.map((element, index) => {\n                                return (\n                                    <li key={index}>\n                                        <h5>{element.choice}</h5> \n                                        <p>Votes: {element.votes}</p>\n                                        <button onClick={() => handleVote(index)}>Vote</button>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                        <Share url={window.location.href} />\n                    </>\n                ) : (\n                    <Spinner animation=\"border\" />\n                ) }\n            </div>\n        </Main>\n    );\n};\n\nexport default Detail;","/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/NavBar.js",[],"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Home.js",[],"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Search.js",[],"/Users/guilhermesilva/Desktop/code/Bliss/bliss_recruitment_api/src/components/Share.js",[],["54","55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"56","replacedBy":"60"},{"ruleId":"58","replacedBy":"61"},{"ruleId":"56","replacedBy":"62"},{"ruleId":"58","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":75,"column":19,"nodeType":"66","messageId":"67","endLine":75,"endColumn":27},{"ruleId":"64","severity":1,"message":"68","line":76,"column":20,"nodeType":"66","messageId":"67","endLine":76,"endColumn":29},{"ruleId":"69","severity":1,"message":"70","line":91,"column":8,"nodeType":"71","endLine":91,"endColumn":10,"suggestions":"72"},{"ruleId":"69","severity":1,"message":"73","line":127,"column":10,"nodeType":"71","endLine":127,"endColumn":12,"suggestions":"74"},{"ruleId":"56","replacedBy":"75"},{"ruleId":"58","replacedBy":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],["77"],["78"],["77"],["78"],"no-unused-vars","'setLimit' is assigned a value but never used.","Identifier","unusedVar","'setOffset' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filter', 'limit', and 'offset'. Either include them or remove the dependency array.","ArrayExpression",["79"],"React Hook useEffect has a missing dependency: 'question.id'. Either include it or remove the dependency array.",["80"],["77"],["78"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [filter, limit, offset]",{"range":"85","text":"86"},"Update the dependencies array to be: [question.id]",{"range":"87","text":"88"},[2146,2148],"[filter, limit, offset]",[2520,2522],"[question.id]"]